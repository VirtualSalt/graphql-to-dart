
{{#*inline "exposeField" ~}}
{{#if type}}{{#if name}}
  {{#if description }}{{ multilineComment description }}
  {{/if}}
  {{ type }} get {{ name }} => fields.{{ name }};
  set {{ name }} ({{ type }} {{ name }}) => fields.{{ name }} = {{ name }};
{{~/if}}{{/if}}
{{~/inline}}

{{#*inline "fragmentMixin" }}
{{ multilineComment description }}
mixin {{ className }} on {{ typeName }} {{
  classExtends
    typeName=""
    fragmentsSpread=fragmentsSpread
}} {
  static final String typeName = "{{ typeName }}";

  {{> selectionSet }}

}
{{/inline}}

{{# if (hackFragmentFields "ensure_unique" name) ~}}

{{#eachBackwards innerModels }}


{{~ hackFragmentBaseTypes "add" (concat (toPascalCase ../name) modelType) schemaBaseType ~}}

{{> fragmentMixin
      className=(concat (toPascalCase ../name) modelType)
      typeName=schemaBaseType
      fields=fields
      fragmentsSpread=fragmentsSpread
      contextModels=../innerModels
      contextName=(toPascalCase ../name)
}}

{{/eachBackwards}}

{{~ hackFragmentBaseTypes "add" (toPascalCase name) onType ~}}

{{> fragmentMixin
      className=(toPascalCase name)
      typeName=onType
      fields=fields
      fragmentsSpread=fragmentsSpread
      contextModels=innerModels
      contextName=(toPascalCase name)
}}


{{~ hackFragmentFields "add" name
    fields
    innerModels
    fragmentsSpread 
~}}


{{/if}}
