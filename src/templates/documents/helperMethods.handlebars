  {{className}}._fromFields(this.fields);

  /// Construct an empty `{{ className }}`
  {{ className }}.empty();

  /// Adds all fields from [other] to this `{{ className }}`.
  /// 
  /// If a field from [other] is already in this `{{ className }}`,
  /// its value is overwritten, unless  `overwrite: true` is specified
  void addAll(covariant {{ className }} other, { bool overwrite = true, }) => 
    assert(other != null, "Cannot add all from null into $this"),
    fields.addAll(other.fields, overwrite: overwrite);

  /// Creates a copy of this `{{ className }}`
  {{ className }} copy() => {{ className }}.fromFields(fields.copy());


  factory {{className}}.fromJson(Map<String, dynamic> json) => 
    deserializeFromJson(json);

  Map<String, dynamic> toJson() => serializeToJson(this);

  static {{className}} deserializeFromJson(Map<String, dynamic> json){
    {{className}} instance = _${{className}}FromJson(json);
    // for handling inline fragment logic 
    instance.__typename = json['__typename'] as String;

    {{#if hasInlineFragments~}}
    {{#each inlineFragments}}
      if(instance.__typename  == null || instance.__typename  == {{ concat ../contextName name }}.typeName){
        instance.{{ camelCase name}} = {{ concat ../contextName name }}.fromJson(json);
      }
    {{/each}}
    {{~/if}}
    return instance;
  }


  static Map<String, dynamic> serializeToJson({{className}} instance){
    Map<String, dynamic> json = _${{className}}ToJson(instance);
    {{#if hasInlineFragments~}}
    {{#each inlineFragments}}
        if (instance.{{ camelCase name}} != null){
           json.addAll(instance.{{ camelCase name}}.toJson());
        }
    {{/each}}
    {{~/if}}

    {{#if typeName }}
      json['__typename'] = instance.__typename ?? typeName;
    {{/if}}
    return json;
  }